services:
  traefik:
    image: traefik:v3.4
    networks:
      - public_web
      - traefik_internal
      - crowdsec_net
    depends_on:
      - traefik-external-redis
    ports:
      # - "80:80"
      # - "443:443"
      - "8080:8080"
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
      CS_TRAEFIK_BOUNCER_KEY: ${CS_TRAEFIK_BOUNCER_KEY}
      BOUNCER_HOST: ${BOUNCER_HOST}
    volumes:
      - ./traefik/letsencrypt:/letsencrypt
      - ./traefik/certificates:/certificates
      - ./traefik/log:/var/log/traefik:rw
      - ./traefik/static-config:/etc/traefik:rw
      - ./traefik/dynamic-config:/config/dynamic:rw
      - ./traefik/ban.html:/config/ban.html:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: true
      traefik.http.routers.traefik-dashboard-external.rule: Host(`traefik-external.local.<PUBLICDOMAINUSEDHERE>`)
      # traefik.http.routers.traefik-dashboard-external.tls: true
      # traefik.http.routers.traefik-dashboard-external.tls.certresolver: internalresolver
      # traefik.http.routers.traefik-dashboard-external.entrypoints: websecure
      traefik.http.services.traefik-dashboard-external.loadbalancer.server.port: 8080
      kop.traefik-dashboard-external.bind.ip: "10.0.0.167"
      # homepage.group: Monitoring
      # homepage.name: Traefik (External)
      # homepage.icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/traefik.png
      # homepage.href: "https://traefik-external.local.<PUBLICDOMAINUSEDHERE>"

  logrotate:
    image: vegardit/traefik-logrotate:latest
    network_mode: none
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw # required to send USR1 signal to Traefik after log rotation
      - ./traefik/log:/var/log/traefik:rw # folder containing access.log file
    environment:
      TZ: "America/Los_Angeles"
      # all environment variables are optional and show the default values:
      LOGROTATE_LOGS: "/var/log/traefik/*.log" # log files to rotate, directory must match volume mount
      LOGROTATE_TRIGGER_INTERVAL: daily  # rotate daily, must be one of: daily, weekly, monthly, yearly
      LOGROTATE_TRIGGER_SIZE: 50M        # rotate if log file size reaches 50MB
      LOGROTATE_MAX_BACKUPS: 7          # keep 14 backup copies per rotated log file
      LOGROTATE_START_INDEX: 1           # first rotated file is called access.1.log
      LOGROTATE_FILE_MODE: 0644          # file mode of the rotated file
      LOGROTATE_FILE_USER: root          # owning user of the rotated file
      LOGROTATE_FILE_GROUP: root         # owning group of the rotated file
      CRON_SCHEDULE: "* * * * *"
      CRON_LOG_LEVEL: 8                  # see https://unix.stackexchange.com/a/414010/378036
      # command to determine the id of the container running Traefik:
      TRAEFIK_CONTAINER_ID_COMMAND: docker ps --no-trunc --quiet --filter label=org.opencontainers.image.title=Traefik

  traefik-access-logs:
    image: alpine
    container_name: traefik-external-access-logs
    volumes:
      - ./traefik/log:/var/log:ro
    command: >
      sh -c "tail -F /var/log/access.log"
    network_mode: none
    restart: unless-stopped
    
  traefik-external-redis:
    restart: unless-stopped
    image: redis:7-alpine
    container_name: traefik-external-redis
    ports:
      - "6380:6379"
    networks:
      - traefik_internal
      - kop_net
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  cloudflare_tunnel:
    image: cloudflare/cloudflared:2025.7.0
    # container_name: cloudflare_tunnel
    restart: unless-stopped
    command: tunnel run --token ${CF_TRAEFIK_TUNNEL_TOKEN}
    environment:
        TUNNEL_METRICS: 0.0.0.0:20241
    networks:
        - traefik_internal

  logdy:
    build:
      context: https://github.com/logdyhq/logdy-core.git
    read_only: true
    networks:
      - internal_web
    volumes:
      - ./traefik/log:/var/log:ro
      - ./logdy/logdy.json:/config/logdy.json
    command:
      - "--config"
      - "/config/logdy.json"
      - "follow"
      #- "--full-read"
      - "/var/log/access.log"
      - "--no-analytics"
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    labels:
      traefik.enable: true
      traefik.http.routers.logdy-traefik-external.rule: Host(`traefik-log-external.local.<PUBLICDOMAINUSEDHERE>`)
      traefik.http.routers.logdy-traefik-external.tls: true
      traefik.http.routers.logdy-traefik-external.tls.certresolver: internalresolver
      traefik.http.routers.logdy-traefik-external.entrypoints: websecure
      traefik.http.services.logdy-traefik-external.loadbalancer.server.port: 8080
      traefik.docker.network: internal_web
      # homepage.group: Monitoring
      # homepage.name: Traefik Logs (External)
      # homepage.icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/logdy.png
      # homepage.href: "https://traefik-log-external.local.<PUBLICDOMAINUSEDHERE>"

  socket-proxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: traefik-ext-socket-proxy
    networks:
      - crowdsec_net
    environment:
      - CONTAINERS=1
      - POST=0
      - INFO=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 2375:2375
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /run

networks:
  traefik_internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
  public_web:
    driver: overlay
    external: true
  internal_web:
    driver: overlay
    external: true
  kop_net:
    driver: overlay
    external: true
  crowdsec_net:
    driver: overlay
    external: true
